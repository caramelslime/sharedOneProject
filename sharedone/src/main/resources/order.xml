<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orderns">

	<select id="orderList" parameterType="map" resultType="order">
		SELECT o.*, buyerNM, name FROM t_order o, m_buyer b, m_employee e
		<where>
			<if test="soNo != null and soNo !=''">
				UPPER(soNo) like UPPER('%'||#{soNo}||'%') AND
			</if>
			<if test="buyerCD != null and buyerCD !=''">
				(UPPER(o.buyerCD) like UPPER('%'||#{buyerCD}||'%') OR
				UPPER(buyerNM) like UPPER('%'||#{buyerCD}||'%')) AND
			</if>
			<if test="soUser != null and soUser !=''">
				(UPPER(soUser) like UPPER('%'||#{soUser}||'%') OR
				UPPER(name) like UPPER('%'||#{soUser}||'%')) AND
			</if>
			<if test="status != null and status !=''">
				UPPER(o.status) like UPPER('%'||#{status}||'%') AND
			</if>
			<if test="pricingDateStart != null and pricingDateStart !=''">
				pricingDate BETWEEN TO_DATE(#{pricingDateStart}, 'YYYY-MM-DD') AND TO_DATE(#{pricingDateEnd}, 'YYYY-MM-DD') AND
			</if>
			<if test="addDateStart != null and addDateStart !=''">
				o.addDate BETWEEN TO_DATE(#{addDateStart}, 'YYYY-MM-DD') AND TO_DATE(#{addDateEnd}, 'YYYY-MM-DD') AND
			</if>
			<if test="requestDateStart != null and requestDateStart !=''">
				requestDate BETWEEN TO_DATE(#{requestDateStart}, 'YYYY-MM-DD') AND TO_DATE(#{requestDateEnd}, 'YYYY-MM-DD') AND
			</if>
			
			currency IS NOT NULL AND o.buyerCD = b.buyerCD AND o.soUser = e.empcd
		</where>
		 ORDER BY ${sortBy}
		 <if test='sortAs != null and sortAs == "asc"'>ASC</if>
		 <if test='sortAs != null and sortAs == "desc"'>DESC</if>
		 
	</select>
	
	<select id="selectOrderHeader" parameterType="string" resultType="order">
		SELECT * FROM t_order WHERE soNo=#{soNo}
	</select>
	
	<select id="selectOrderItems" parameterType="string" resultType="order">
		SELECT d.*, productNM, unit, productGroup FROM t_order_detail d, m_product p WHERE d.productCD=p.productCD  AND soNo=#{soNo}
	</select>
	
	
	<select id="selectByProductCD" parameterType="string" resultType="order">
		SELECT * FROM m_product WHERE productCD=#{productCD}
	</select>
	
	<insert id="addOrderDetail" parameterType="map">
		INSERT INTO t_order_detail VALUES (#{soNo}, #{productCD}, #{qty}, #{unitPrice})
	</insert>
	
	<delete id="removeOrderDetail" parameterType="map">
		DELETE t_order_detail WHERE soNo=#{soNo} AND productCD=#{productCD}
	</delete>
	
	<insert id="addOrder" parameterType="map">
		INSERT INTO t_order VALUES (#{soNo}, #{buyerCD}, #{soUser}, sysdate, #{pricingDate}, #{requestDate}, '임시저장', #{currency})
	</insert>
	
	<select id="totalOrder" resultType="int">
		SELECT COUNT(*) FROM t_order
	</select>
	
	<update id="approvalUpdate" parameterType="map">
		UPDATE t_order SET status=#{status} WHERE soNo=#{soNo}
	</update>
	
	<select id="checkValidPrice" parameterType="map" resultType="int">
		<![CDATA[
			SELECT COUNT(*) FROM m_price WHERE buyerCD = #{buyerCD} AND productCD = #{productCD} AND currency = #{currency} AND #{pricingDate} >= periodstart AND #{pricingDate} <=periodend
		]]> 
	</select>
	
	<select id="validPrice" parameterType="map" resultType="int">
		<![CDATA[
			SELECT listprice FROM m_price WHERE buyerCD = #{buyerCD} AND productCD = #{productCD} AND currency=#{currency} AND #{pricingDate} >= periodstart AND #{pricingDate} <=periodend
		]]> 
	</select>
	
	<select id="defaultPrice" parameterType="map" resultType="int">
		SELECT listprice FROM m_price WHERE buyerCD = 'B00000' AND productCD = #{productCD} AND currency=#{currency}
	</select>
	
	
	<delete id="detailProductDelete" parameterType="String">
		DELETE FROM t_order_detail WHERE soNo = #{soNo}
	</delete>
	
	<insert id="detailProductUpdate" parameterType="map">
		INSERT INTO t_order_detail VALUES (#{soNo}, #{productCD}, #{qty}, #{unitPrice})
	</insert>
	
	<select id="orderAllList" parameterType="order" resultType="order">
		SELECT * FROM t_order WHERE soUser = #{soUser} ORDER BY soNo DESC
	</select>
	
	<select id="totalPrice" parameterType="String" resultType="int">
		SELECT NVL(SUM(unitprice * qty),0) FROM t_order_detail WHERE soNo = #{soNo}
	</select>
	
	<update id="terminate" parameterType="map">
		UPDATE t_order SET status=#{status} WHERE soNo=#{soNo}
	</update>
	
	
	
	<!-- khs 승인요청중인 오더리스트 불러오기 -->
	<select id="pendingApprovalList" parameterType="order" resultType="order">
		select o.*,e.name,b.buyerNm from t_order o,m_employee e,m_buyer b 
		<where>
			<if test="buyerCD != null and buyerCD !=''">
				UPPER(o.buyerCD) like UPPER('%'||#{buyerCD}||'%') AND
			</if>
			<if test="soUser != null and soUser !=''">
				UPPER(soUser) like UPPER('%'||#{soUser}||'%') AND
			</if>
			o.souser=e.empCd and o.buyerCd=b.buyerCd and o.souser in (select empCd from m_employee where dept = (select dept from m_employee where empCd = #{empCd2})) and o.status = '승인대기'
		</where>
		 ORDER BY o.adddate desc
	</select>
	
	<!-- khs 승인/반려 시 상태 업데이트 -->
	<update id="updateApproveOrRefer" parameterType="notice">
		<if test="check==1">
			update t_order set status = '승인완료' where sono = #{soNo}
		</if>
		<if test="check==2">
			update t_order set status = '반려' where sono = #{soNo}
		</if>
	</update>
	
</mapper>